# See https://aka.ms/customizecontainer to learn how to customize your debug container and how Visual Studio uses this Dockerfile to build your images for faster debugging.

# This stage is used when running from VS in fast mode (Default for Debug configuration)
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS base
USER $APP_UID
WORKDIR /app
EXPOSE 8080
EXPOSE 8081

# This stage is used to build the service project and tests
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Install Docker CLI and Docker Compose with Docker-in-Docker support
# RUN apt-get update && apt-get install -y \
#     apt-transport-https \
#     ca-certificates \
#     curl \
#     gnupg \
#     lsb-release \
#     && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
#     && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null \
#     && apt-get update \
#     && apt-get install -y docker-ce-cli docker-compose-plugin \
#     && rm -rf /var/lib/apt/lists/*

# Generate development certificate for HTTPS
RUN dotnet dev-certs https --clean && \
    dotnet dev-certs https --trust --quiet

# Copy solution and all projects
COPY ["Template.sln", "./"]
COPY ["Directory.Packages.props", "./"]
COPY ["Template.API/", "Template.API/"]
COPY ["Template.Application/", "Template.Application/"]
COPY ["Template.Domain/", "Template.Domain/"]
COPY ["Template.Infra/", "Template.Infra/"]
COPY ["Template.Integration.Tests/", "Template.Integration.Tests/"]
COPY ["Template.ServiceDefault/", "Template.ServiceDefault/"]
COPY ["Template.AppHost/", "Template.AppHost/"]

# Restore and build
RUN dotnet clean "Template.sln"
RUN dotnet restore "Template.sln"
RUN dotnet build "Template.sln" -c Release

# Run unit tests only (exclude integration tests that require orchestration)
FROM build AS test
RUN mkdir -p /app/TestResults

# Set environment variables to disable Docker requirement for testing
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV ASPIRE_ALLOW_UNSECURED_CONTAINERREQUESTS=true

# Run only unit tests (exclude all integration tests)
RUN dotnet test "Template.Integration.Tests/Template.Integration.Tests.csproj" \
    --filter "TestCategory!=Integration" \
    --logger "trx;LogFileName=TestResults.trx" \
    --results-directory /app/TestResults \
    --no-build \
    || echo "Tests completed"

CMD ["dotnet", "test", "--list-tests"]

